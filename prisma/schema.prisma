// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  image String?
  email String? @unique
  emailVerified DateTime?
  hashedPassword String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  sessions Session[]
  accounts Account[]
  review Review[]
  wishListItems WishlistItem[]
}

model Account{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  type String
  provider String
  providerAccountId String
  refresh_token String? @db.String
  access_token String? @db.String
  expires_at Int?
  token_type String?
  scope String?
  id_token String? @db.String
  session_state String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String @unique
  userId String @db.ObjectId
  expires DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  identifier String @unique
  token String @unique
  expires DateTime

  @@unique([identifier, token])
}

model Product{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  images String[]
  categorieId String? @db.ObjectId
  description String?
  price Float
  discounts Discount[]
  quantityInStock Int
  wishlistUsers WishlistItem[]

  categorie Categorie? @relation(fields: [categorieId], references: [id], onDelete: Restrict, onUpdate: Cascade )
  reviews Review[]

}

model Categorie{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  description String?
  products Product[]
}

model Review{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  productId String @db.ObjectId
  userId String @db.ObjectId
  rating Int
  comment String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model WishlistItem {
  id               String     @id @default(auto()) @map("_id") @db.ObjectId
  user             User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId           String     @db.ObjectId
  product          Product    @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId        String     @db.ObjectId
  createdAt        DateTime   @default(now())

  @@unique([userId, productId])
}

model Discount {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  code          String    @unique
  name          String
  description   String?
  type          DiscountType
  amount        Float
  percentage    Float
  minPurchase   Float
  startDate     DateTime
  endDate       DateTime
  products      Product[] @relation("DiscountProduct")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

enum DiscountType {
  PERCENTAGE
  AMOUNT
}

